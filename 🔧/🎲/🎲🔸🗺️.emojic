💭🔜
    Game Of Life - Conway's Game Of Life written in emojicode

    Copyright 2022 Nathan Mentley
    
    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
    
    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
🔚💭

📗A class that contains the state of the game of life, and contains the logic to process it one tick at a time.📗
🐇 🎲🔸🗺️ 🍇
  💭 An integer that holds the map width.
  🖍🆕 mapWidth 🔢

  💭 An integer that holds the map height.
  🖍🆕 mapHeight 🔢

  💭 A 2 dimentional list of cells (🎲🔸🦠) that contains the entire map's state.
  🖍🆕 map 🍨🐚️🍨🐚️🎲🔸🦠🍆🍆

  📗A constructor that takes in a width and height for the game, and generates the initial game state.📗
  🆕 width 🔢 height 🔢 🍇
    💭 set instance data
    width ➡️ 🖍mapWidth
    height ➡️ 🖍mapHeight
    🆕 🍨🐚️🍨🐚️🎲🔸🦠🍆🍆❗️ ➡️ 🖍map

    💭 populate map with random date
    🆕🎰❗ ➡ randomNumberGen

    🔂 x 🆕⏩ 0 mapWidth❗️ 🍇
      💭 creates a 1d list of cells, to use as a column of the map.
      🆕 🍨🐚️🎲🔸🦠🍆❗ ➡ 🖍🆕 column

      🔂 y 🆕⏩ 0 mapHeight❗️ 🍇
        💭 flip a coin to see if the cell should be alive, then add it to the list.
        🔢 randomNumberGen 1 2 ❗️ ➡️ isCellAlive

        🆕 🎲🔸🦠 isCellAlive 🙌 1 ❗ ➡️ cell

        🐻 column cell ❗
      🍉

      🐻 map column ❗
    🍉
  🍉

  📗gets the width of the game📗
  🔓 ❓ 📏 ➡️ 🔢 🍇
    ↩️ mapWidth
  🍉

  📗gets the height of the game📗
  🔓 ❓ 📐 ➡️ 🔢 🍇
    ↩️ mapHeight
  🍉

  📗gets if a specific cell is alive📗
  🔓 ❓ 💙 x 🔢 y 🔢 ➡️ 👌 🍇
    💭 if x or y is out of bounds return false
    ↪️ x ▶️🙌 mapWidth 🍇
      ↩️ 👎
    🍉
    ↪️ y ▶️🙌 mapHeight 🍇
      ↩️ 👎
    🍉
    ↪️ x ◀️ 0 🍇
      ↩️ 👎
    🍉
    ↪️ y ◀️ 0 🍇
      ↩️ 👎
    🍉


    💭 if x or y is in of bounds fetch the cell, and check if it's alive.
    🦠 👇 x y ❓ ➡ cell

    ↩️ 💙 cell ❓
  🍉

  📗runs a single tick of the game📗
  🔓 ❗️ ⏱️ ➡️ 👌 🍇
    💭 create two lists to hold all the cells to kill or revive.
    🆕 🍨🐚️🎲🔸🦠🍆❗ ➡ 🖍🆕 cellsToKill
    🆕 🍨🐚️🎲🔸🦠🍆❗ ➡ 🖍🆕 cellsToRevieve

    💭 iterate over the map.
    🔂 x 🆕⏩ 0 mapWidth❗️ 🍇
      🔂 y 🆕⏩ 0 mapHeight❗️ 🍇
        💭 if the cell is alive and it should die, add it to the toKill list.
        ↪️ 💙 👇 x y ❓ 🤝 💀 👇 x y ❓ 🍇
          🦠 👇 x y ❓ ➡ cell

          🐻 cellsToKill cell ❗️
        🍉

        💭 if the cell is dead and it should revive, add it to the toRevive list.
        ↪️ 💙 👇 x y ❓ 🙌 👎 🤝 🏥 👇 x y ❓ 🍇
          🦠 👇 x y ❓ ➡ cell

          🐻 cellsToRevieve cell ❗️
        🍉
      🍉
    🍉

    💭 kill and revieve all cells marked to do so.
    🔂 cell cellsToKill 🍇
      💙 cell 👎 ❗️
    🍉
    🔂 cell cellsToRevieve 🍇
      💙 cell 👍 ❗️
    🍉

    💭 return true if we made any changes.
    ↩️ 📏 cellsToKill ❓ ▶️ 0 👐 📏 cellsToRevieve ❓ ▶️ 0 
  🍉

  📗checks if a cell should die📗
  🔒 ❓ 💀 x 🔢 y 🔢 ➡️ 👌 🍇
    ↩️
      🧮 👇 x y ❓ 🙌 1 👐
      🧮 👇 x y ❓ 🙌 4 👐
      🧮 👇 x y ❓ 🙌 5 👐
      🧮 👇 x y ❓ 🙌 6 👐
      🧮 👇 x y ❓ 🙌 7 👐
      🧮 👇 x y ❓ 🙌 8
  🍉

  📗checks if a cell should be revivied📗
  🔒 ❓ 🏥 x 🔢 y 🔢 ➡️ 👌 🍇
    ↩️ 🧮 👇 x y ❓ 🙌 3
  🍉

  📗calculates how many living neighbors exist for an x and y coordinate📗
  🔒 ❓ 🧮 x 🔢 y 🔢 ➡️ 🔢 🍇
    0 ➡️ 🖍🆕 count

    ↪️ 💙 👇 x ➖ 1 y ❓ 🍇
      count ⬅️ ➕ 1
    🍉
    ↪️ 💙 👇 x ➕ 1 y ❓ 🍇
      count ⬅️ ➕ 1
    🍉
    ↪️ 💙 👇 x y ➖ 1 ❓ 🍇
      count ⬅️ ➕ 1
    🍉
    ↪️ 💙 👇 x y ➕ 1 ❓ 🍇
      count ⬅️ ➕ 1
    🍉
    ↪️ 💙 👇 x ➖ 1 y ➖ 1 ❓ 🍇
      count ⬅️ ➕ 1
    🍉
    ↪️ 💙 👇 x ➕ 1 y ➖ 1 ❓ 🍇
      count ⬅️ ➕ 1
    🍉
    ↪️ 💙 👇 x ➕ 1 y ➕ 1 ❓ 🍇
      count ⬅️ ➕ 1
    🍉
    ↪️ 💙 👇 x ➖ 1 y ➕ 1 ❓ 🍇
      count ⬅️ ➕ 1
    🍉

    ↩️ count
  🍉

  📗fetches a cell from an x and y coordinate.📗
  🔒 ❓ 🦠 x 🔢 y 🔢 ➡️ 🎲🔸🦠 🍇
    ↩️ 🐽 🐽 map x ❗️ y ❗️
  🍉
🍉